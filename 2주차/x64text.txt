   0x0000000000400835 <+0>:     push   rbp
   0x0000000000400836 <+1>:     mov    rbp,rsp                              // 프롤로그
   0x0000000000400839 <+4>:     add    rsp,0xffffffffffffff80
   0x000000000040083d <+8>:     mov    rax,QWORD PTR fs:0x28
   0x0000000000400846 <+17>:    mov    QWORD PTR [rbp-0x8],rax
   0x000000000040084a <+21>:    xor    eax,eax
   0x000000000040084c <+23>:    call   0x4007c4 <setup>                     // setup();
   0x0000000000400851 <+28>:    mov    QWORD PTR [rbp-0x78],0x0             // int a=0;
   0x0000000000400859 <+36>:    mov    QWORD PTR [rbp-0x70],0x0             // int b=0;
   0x0000000000400861 <+44>:    mov    QWORD PTR [rbp-0x68],0x0             // int c=0;
   0x0000000000400869 <+52>:    lea    rdx,[rbp-0x60]
   0x000000000040086d <+56>:    mov    eax,0x0
   0x0000000000400872 <+61>:    mov    ecx,0xa                              // int rep
   0x0000000000400877 <+66>:    mov    rdi,rdx
   0x000000000040087a <+69>:    rep stos QWORD PTR es:[rdi],rax
   0x000000000040087d <+72>:    lea    rdi,[rip+0x11a]        # 0x40099e    
   0x0000000000400884 <+79>:    mov    eax,0x0
   0x0000000000400889 <+84>:    call   0x400660 <printf@plt>                // printf("Input: ", );
   0x000000000040088e <+89>:    lea    rcx,[rbp-0x68]                       // c
   0x0000000000400892 <+93>:    lea    rdx,[rbp-0x70]                       // b
   0x0000000000400896 <+97>:    lea    rax,[rbp-0x78]                       // a
   0x000000000040089a <+101>:   mov    rsi,rax
   0x000000000040089d <+104>:   lea    rdi,[rip+0x102]        # 0x4009a6
   0x00000000004008a4 <+111>:   mov    eax,0x0
   0x00000000004008a9 <+116>:   call   0x4006a0 <__isoc99_scanf@plt>        // a=5, b=6, c=7
   0x00000000004008ae <+121>:   mov    DWORD PTR [rbp-0x7c],eax
   0x00000000004008b1 <+124>:   cmp    DWORD PTR [rbp-0x7c],0x3
   0x00000000004008b5 <+128>:   jne    0x4008cd <main+152>
   0x00000000004008b7 <+130>:   mov    rax,QWORD PTR [rbp-0x68]             // c=7
   0x00000000004008bb <+134>:   mov    rcx,QWORD PTR [rbp-0x78]             // a=5
   0x00000000004008bf <+138>:   mov    rdx,QWORD PTR [rbp-0x70]             // b=6
   0x00000000004008c3 <+142>:   add    rdx,rcx
   0x00000000004008c6 <+145>:   mov    QWORD PTR [rbp+rax*8-0x60],rdx
   0x00000000004008cb <+150>:   jmp    0x4008e3 <main+174>
   0x00000000004008cd <+152>:   mov    eax,0x0
   0x00000000004008d2 <+157>:   mov    rsi,QWORD PTR [rbp-0x8]
   0x00000000004008d6 <+161>:   xor    rsi,QWORD PTR fs:0x28
   0x00000000004008df <+170>:   je     0x40090a <main+213>
   0x00000000004008e1 <+172>:   jmp    0x400905 <main+208>
   0x00000000004008e3 <+174>:   mov    rax,QWORD PTR [rbp-0x68]
   0x00000000004008e7 <+178>:   mov    rax,QWORD PTR [rbp+rax*8-0x60]
   0x00000000004008ec <+183>:   mov    rsi,rax
   0x00000000004008ef <+186>:   lea    rdi,[rip+0xbc]        # 0x4009b2
   0x00000000004008f6 <+193>:   mov    eax,0x0
   0x00000000004008fb <+198>:   call   0x400660 <printf@plt>
   0x0000000000400900 <+203>:   jmp    0x400851 <main+28>
   0x0000000000400905 <+208>:   call   0x400640 <__stack_chk_fail@plt>
   0x000000000040090a <+213>:   leave                                       //에필로그
   0x000000000040090b <+214>:   ret